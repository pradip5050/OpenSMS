name: Build and release Tauri app

on:
  push:
    tags: ["*.*.*"]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: write

jobs:
  build-release-desktop:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04"
            args: "--target x86_64-unknown-linux-gnu"
          - platform: "windows-latest"
            args: ""
          - platform: "windows-latest"
            args: "--target aarch64-pc-windows-msvc --bundles nsis"

    runs-on: ${{ matrix.settings.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: frontend
          sparse-checkout-cone-mode: false

      - name: Move frontend files to root (Windows)
        if: matrix.settings.platform == 'windows-latest'
        run: |
          Get-ChildItem -Force -File | Format-List
          Move-Item -Path 'frontend\*' -Destination .
          Remove-Item -Recurse -Force -Path 'frontend'
          Get-ChildItem -Force -File | Format-List

      - name: Move frontend files to root (Unix)
        if: matrix.settings.platform != 'windows-latest'
        run: |
          ls -lah
          shopt -s dotglob
          mv frontend/* .
          rm -rf frontend
          ls -lah

      - name: Install dependencies (Ubuntu only)
        if: matrix.settings.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Add rustup ARM target (Windows ARM only)
        if: matrix.settings.args == '--target aarch64-pc-windows-msvc --bundles nsis'
        run: rustup target add aarch64-pc-windows-msvc

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install site packages
        run: npm install

      - name: Update app version
        run: npm run tauri:version -- ${{ github.ref_name }}

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: ${{ github.ref_name }}
          releaseBody: "See the assets to download this version and install."
          prerelease: false
          args: ${{ matrix.settings.args }}

  build-release-mobile:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            CHANGELOG.md
            frontend
          sparse-checkout-cone-mode: false

      - name: Move frontend files to root
        run: |
          ls -lah
          shopt -s dotglob
          mv frontend/* .
          rm -rf frontend
          ls -lah

      - name: Install Android Requirements
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386

      - name: Download & Install Android build tools
        run: |
          sudo curl -L -o ./jbr.tar.gz https://cache-redirector.jetbrains.com/intellij-jbr/jbr_jcef-17.0.11-linux-x64-b1207.24.tar.gz
          sudo mkdir jbr
          sudo tar -xvf ./jbr.tar.gz -C ./jbr
          sudo chmod 777 -R ./jbr

          sudo curl -L -o ./sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          sudo unzip ./sdk.zip -d ./sdk
          sudo mkdir ./sdk/cmdline-tools-test
          sudo mv ./sdk/cmdline-tools/* ./sdk/cmdline-tools-test
          sudo mkdir ./sdk/cmdline-tools/latest
          sudo mv ./sdk/cmdline-tools-test/* ./sdk/cmdline-tools/latest
          sudo rm -rf ./sdk/cmdline-tools-test
          sudo chmod 777 -R ./sdk

          export JAVA_HOME="./jbr/jbr_jcef-17.0.11-linux-x64-b1207.24"
          export ANDROID_HOME="./sdk"

          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin

          echo y | sdkmanager "platform-tools"
          echo y | sdkmanager "platforms;android-34"
          echo y | sdkmanager "ndk;27.0.11902837"
          echo y | sdkmanager "build-tools;35.0.0-rc4"

          export NDK_HOME="$ANDROID_HOME/ndk/27.0.11902837"

      - name: Install Tauri Requirements
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install Rust targets
        run: rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android

      - name: Setup env variables
        run: |
          export CURRENT_DIR=$(pwd)
          export ANDROID_HOME="$CURRENT_DIR/sdk/"
          export ANDROID_SDK_ROOT="$CURRENT_DIR/sdk/"
          export NDK_HOME="$CURRENT_DIR/sdk/ndk/27.0.11902837/"
          export JAVA_HOME="$CURRENT_DIR/jbr/jbr_jcef-17.0.11-linux-x64-b1207.24/"

          sudo chmod 777 -R ./src-tauri

          npm install
          npm run tauri:version -- ${{ github.ref_name }}
          npm run tauri android build

      - name: Sign app APK
        uses: filippoLeporati93/android-release-signer@v1
        id: sign_app
        with:
          releaseDirectory: ./src-tauri/gen/android/app/build/outputs/apk/universal/release
          signingKeyBase64: ${{ secrets.KEY_FILE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          ANDROID_HOME: ./sdk
          BUILD_TOOLS_VERSION: 35.0.0-rc4

      - name: Rename signed apk and move to apk/
        run: |
          mkdir apk
          mv ./src-tauri/gen/android/app/build/outputs/apk/universal/release/app-universal-release-unsigned-signed.apk ./apk/opensms.apk

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          name: OpenSMS
          body_path: CHANGELOG.md
          prerelease: true
          generate_release_notes: true
          files: ./apk/*
          token: ${{ secrets.GITHUB_TOKEN }}
